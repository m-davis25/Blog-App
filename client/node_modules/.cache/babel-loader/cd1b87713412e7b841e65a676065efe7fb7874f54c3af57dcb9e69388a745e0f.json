{"ast":null,"code":"var _jsxFileName = \"/Users/makedadavis/Desktop/Udemy/React/Blog App/myblog/client/src/Pages/EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport Editor from '../Editor';\nimport './Posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:8000/posts/' + id).then(response => {\n      response.json().then(postInfo => {\n        setTitle(postInfo.title);\n        setSummary(postInfo.summary);\n        setContent(postInfo.content);\n      });\n    });\n  }, []);\n  async function updatePosts(event) {\n    event.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    if (files !== null && files !== void 0 && files[0]) {\n      data.set('file', files === null || files === void 0 ? void 0 : files[0]);\n    }\n    const response = await fetch('http://localhost:8000/posts/', {\n      method: 'PUT',\n      body: data\n    });\n    if (response.ok) {\n      // setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/posts/' + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: updatePosts,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"edit-title\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: 'title',\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: 'summary',\n      value: summary,\n      onChange: e => setSummary(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFiles(e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: setContent,\n      value: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"xR2TQkCYOPcJrGHyKMKAJzJGV8Q=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useParams","Editor","jsxDEV","_jsxDEV","EditPost","_s","id","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","fetch","then","response","json","postInfo","updatePosts","event","preventDefault","data","FormData","set","method","body","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","className","type","placeholder","value","onChange","e","target","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/makedadavis/Desktop/Udemy/React/Blog App/myblog/client/src/Pages/EditPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useParams } from 'react-router';\nimport Editor from '../Editor';\nimport './Posts.css'\n\n\nconst EditPost = () => {\n    const {id} = useParams();\n    const [title, setTitle] = useState('');\n    const [summary, setSummary] = useState('');\n    const [content, setContent] = useState('');\n    const [files, setFiles] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        fetch('http://localhost:8000/posts/' + id)\n            .then(response => {\n                response.json().then(postInfo => {\n                    setTitle(postInfo.title);\n                    setSummary(postInfo.summary);\n                    setContent(postInfo.content);\n                });\n            });\n    }, []);\n\n    async function updatePosts(event) {\n        event.preventDefault();\n        const data = new FormData();\n        data.set('title', title);\n        data.set('summary', summary);\n        data.set('content', content);\n        if (files?.[0]) {\n            data.set('file', files?.[0]);\n        }\n        \n        const response = await fetch('http://localhost:8000/posts/', {\n            method: 'PUT',\n            body: data,\n        });\n        if (response.ok) {\n               // setRedirect(true);\n        }\n    }\n\n    if (redirect) {\n        return <Navigate to={'/posts/' + id} />\n    }\n\n    return (\n        <form onSubmit={updatePosts}>\n            <h1 className='edit-title'>Edit Post</h1>\n            <input \n                type='title' \n                placeholder={'title'} \n                value={title} \n                onChange={(e) => setTitle(e.target.value)} \n            />\n            <br />\n            <input \n                type='summary' \n                placeholder={'summary'} \n                value={summary}\n                onChange={(e) => setSummary(e.target.value)}\n            />\n            <br />\n            <input \n                type='file'\n                onChange={e => setFiles(e.target.files)}\n            />\n            <Editor onChange={setContent} value={content} />\n            <button style={{marginTop: '5px'}}>Edit Post</button>\n        </form>\n      );\n}\n\nexport default EditPost"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}